name: Build Docker Image, Push to GHCR

on:
  push:
    branches:
    - main
  workflow_dispatch: # Allows manual trigger

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check disk space
      run: df . -h
    - name: Free disk space
      run: |
        sudo docker rmi $(docker image ls -aq) >/dev/null 2>&1 || true
        sudo rm -rf \
        /usr/share/dotnet /usr/local/lib/android /opt/ghc \
        /usr/local/share/powershell /usr/share/swift /usr/local/.ghcup \
        /usr/lib/jvm || true
        echo "some directories deleted"
        sudo apt install aptitude -y >/dev/null 2>&1
        sudo aptitude purge aria2 ansible azure-cli shellcheck rpm xorriso zsync \
        esl-erlang firefox gfortran-8 gfortran-9 google-chrome-stable \
        google-cloud-sdk imagemagick \
        libmagickcore-dev libmagickwand-dev libmagic-dev ant ant-optional kubectl \
        mercurial apt-transport-https mono-complete libmysqlclient \
        unixodbc-dev yarn chrpath libssl-dev libxft-dev \
        libfreetype6 libfreetype6-dev libfontconfig1 libfontconfig1-dev \
        snmp pollinate libpq-dev postgresql-client powershell ruby-full \
        sphinxsearch subversion mongodb-org azure-cli microsoft-edge-stable \
        -y -f >/dev/null 2>&1
        sudo aptitude purge google-cloud-sdk -f -y >/dev/null 2>&1
        sudo aptitude purge microsoft-edge-stable -f -y >/dev/null 2>&1 || true
        sudo apt purge microsoft-edge-stable -f -y >/dev/null 2>&1 || true
        sudo aptitude purge '~n ^mysql' -f -y >/dev/null 2>&1
        sudo aptitude purge '~n ^php' -f -y >/dev/null 2>&1
        sudo aptitude purge '~n ^dotnet' -f -y >/dev/null 2>&1
        sudo apt-get autoremove -y >/dev/null 2>&1
        sudo apt-get autoclean -y >/dev/null 2>&1
        echo "some packages purged"
    - name: Check disk space
      run: |
        sudo dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -nr | head
        df . -h
        sudo du /usr/ -hx -d 4 --threshold=1G | sort -hr | head
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ghcr.io/sunu/multinode-training:latest
          ghcr.io/sunu/multinode-training:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max